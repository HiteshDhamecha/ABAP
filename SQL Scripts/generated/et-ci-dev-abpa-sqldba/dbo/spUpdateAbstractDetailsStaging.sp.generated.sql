-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Abstract Details Stagings
-- Item: spUpdateAbstractDetailsStaging
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- UPDATE PROCEDURE FOR AbstractDetailsStaging
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [dbo].[spUpdateAbstractDetailsStaging]
GO

CREATE PROCEDURE [dbo].[spUpdateAbstractDetailsStaging]
    @ID uniqueidentifier,
    @AbstractID uniqueidentifier,
    @SessionID uniqueidentifier,
    @UserID uniqueidentifier,
    @YearOfExp int,
    @AbstractText nvarchar(MAX),
    @UploadUrl nvarchar(255),
    @AbstractCreatedAt datetime,
    @EventID uniqueidentifier,
    @SessionName nvarchar(255),
    @EventName nvarchar(255),
    @FirstName nvarchar(100),
    @LastName nvarchar(100),
    @UserTitle nvarchar(100),
    @UserEmail nvarchar(255),
    @UserType nvarchar(100),
    @IsActive bit,
    @PhoneNumber nvarchar(20),
    @AbstractResultID uniqueidentifier,
    @AbstractStatusId uniqueidentifier,
    @AbstractStatusName nvarchar(255)
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE
        [dbo].[AbstractDetailsStaging]
    SET
        [AbstractID] = @AbstractID,
        [SessionID] = @SessionID,
        [UserID] = @UserID,
        [YearOfExp] = @YearOfExp,
        [AbstractText] = @AbstractText,
        [UploadUrl] = @UploadUrl,
        [AbstractCreatedAt] = @AbstractCreatedAt,
        [EventID] = @EventID,
        [SessionName] = @SessionName,
        [EventName] = @EventName,
        [FirstName] = @FirstName,
        [LastName] = @LastName,
        [UserTitle] = @UserTitle,
        [UserEmail] = @UserEmail,
        [UserType] = @UserType,
        [IsActive] = @IsActive,
        [PhoneNumber] = @PhoneNumber,
        [AbstractResultID] = @AbstractResultID,
        [AbstractStatusId] = @AbstractStatusId,
        [AbstractStatusName] = @AbstractStatusName
    WHERE
        [ID] = @ID

    -- return the updated record so the caller can see the updated values and any calculated fields
    SELECT
                                        *
                                    FROM
                                        [dbo].[vwAbstractDetailsStagings]
                                    WHERE
                                        [ID] = @ID
                                    
END
GO

GRANT EXECUTE ON [dbo].[spUpdateAbstractDetailsStaging] TO [cdp_Developer], [cdp_Integration]
GO

------------------------------------------------------------
----- TRIGGER FOR __mj_UpdatedAt field for the AbstractDetailsStaging table
------------------------------------------------------------
DROP TRIGGER IF EXISTS [dbo].trgUpdateAbstractDetailsStaging
GO
CREATE TRIGGER [dbo].trgUpdateAbstractDetailsStaging
ON [dbo].[AbstractDetailsStaging]
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;
    UPDATE
        [dbo].[AbstractDetailsStaging]
    SET
        __mj_UpdatedAt = GETUTCDATE()
    FROM
        [dbo].[AbstractDetailsStaging] AS _organicTable
    INNER JOIN
        INSERTED AS I ON
        _organicTable.[ID] = I.[ID];
END;
GO
        