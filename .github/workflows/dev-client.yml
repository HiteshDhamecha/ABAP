name: Deploy Client-ABPA using Develop Branch
 
on:
  push:
    paths:
      - 'GeneratedEntities/**'
      - 'Client/**'
    branches:
      - Development
  workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Create environment file
        run: |
          mkdir -p ./src/environments # Ensure the directory exists
          cat << EOF > ./src/environments/environment.ts
          export const environment = {
          GRAPHQL_URI: '${{ secrets.GRAPHQL_URI }}',
          GRAPHQL_WS_URI: '${{ secrets.GRAPHQL_WS_URI }}',
          REDIRECT_URI: '${{ secrets.REDIRECT_URI }}',
          CLIENT_ID: '${{ secrets.CLIENT_ID }}',
          CLIENT_SECRET: '${{ secrets.CLIENT_SECRET }}',
          CLIENT_AUTHORITY: '${{ secrets.CLIENT_AUTHORITY }}',
          AUTH_TYPE: '${{ secrets.AUTH_TYPE }}',
          NODE_ENV: '${{ secrets.NODE_ENV }}',
          AUTOSAVE_DEBOUNCE_MS: '${{ secrets.AUTOSAVE_DEBOUNCE_MS }}',
          SEARCH_DEBOUNCE_MS: '${{ secrets.SEARCH_DEBOUNCE_MS }}',
          MIN_SEARCH_LENGTH: '${{ secrets.MIN_SEARCH_LENGTH }}',
          MJ_CORE_SCHEMA_NAME: '${{ secrets.MJ_CORE_SCHEMA_NAME }}',
          production: '${{ secrets.PRODUCTION }}',
          APPLICATION_NAME: '${{ secrets.APPLICATION_NAME }}',
          APPLICATION_INSTANCE: '${{ secrets.APPLICATION_INSTANCE }}',
          AUTH0_DOMAIN: '${{ secrets.AUTH0_DOMAIN }}',
          AUTH0_CLIENT_SECRET: '${{ secrets.AUTH0_CLIENT_SECRET }}',
          AUTH0_CLIENTID: '${{ secrets.AUTH0_CLIENTID }}',
          TOKEN_CACHE_KEY: '${{ secrets.TOKEN_CACHE_KEY }}',
          SAS_TOKEN: '${{ secrets.SAS_TOKEN }}',
          STORAGE_ACCT:'${{ secrets.STORAGE_ACCT }}',
          CONTAINER:'${{ secrets.CONTAINER }}'
          };
          EOF
        working-directory: Client

      - name: Build GeneratedEntities
        run: |
          cd GeneratedEntities
          npm install
          npm run build

      - name: Build Client
        run: |
          cd Client
          npm link ../GeneratedEntities --force
          npm install --force
          npm run build
 
      - name: Zip artifact for Client deployment
        run: |
          cd Client
          zip et-dev-client-release.zip ./* -r
 
      - name: Upload artifact for Client deployment job
        uses: actions/upload-artifact@v4
        with:
          name: et-dev-client-app
          path: Client/et-dev-client-release.zip          
 
  deploy-client:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: et-dev-client-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-align-dev-mjwebapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'et-ci-dev-abpa-ui'
          slot-name: 'Production'
          package: et-dev-client-release.zip
          publish-profile: ${{ secrets.AZURE_WEBAPP_DEV_UI_PUBLISH_PROFILE }}
 
