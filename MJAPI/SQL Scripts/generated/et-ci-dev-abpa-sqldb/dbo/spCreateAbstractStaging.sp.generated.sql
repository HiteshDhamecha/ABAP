-----------------------------------------------------------------
-- SQL Code Generation
-- Entity: Abstract Stagings
-- Item: spCreateAbstractStaging
--
-- This was generated by the MemberJunction CodeGen tool.
-- This file should NOT be edited by hand.
-----------------------------------------------------------------

------------------------------------------------------------
----- CREATE PROCEDURE FOR AbstractStaging
------------------------------------------------------------
DROP PROCEDURE IF EXISTS [dbo].[spCreateAbstractStaging]
GO

CREATE PROCEDURE [dbo].[spCreateAbstractStaging]
    @SessionID uniqueidentifier,
    @UserID uniqueidentifier,
    @YearOfExp int,
    @AbstractText nvarchar(MAX),
    @UploadUrl nvarchar(500),
    @Session nvarchar(255),
    @User nvarchar(255),
    @FirstName nvarchar(255),
    @LastName nvarchar(255),
    @EventID uniqueidentifier,
    @EventName nvarchar(255),
    @EventStartDate datetime,
    @EventEndDate datetime,
    @Description nvarchar(MAX),
    @EventCreatedAt datetime,
    @EventUpdatedAt datetime
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @InsertedRow TABLE ([ID] UNIQUEIDENTIFIER)
    INSERT INTO
    [dbo].[AbstractStaging]
        (
            [SessionID],
            [UserID],
            [YearOfExp],
            [AbstractText],
            [UploadUrl],
            [Session],
            [User],
            [FirstName],
            [LastName],
            [EventID],
            [EventName],
            [EventStartDate],
            [EventEndDate],
            [Description],
            [EventCreatedAt],
            [EventUpdatedAt]
        )
    OUTPUT INSERTED.[ID] INTO @InsertedRow
    VALUES
        (
            @SessionID,
            @UserID,
            @YearOfExp,
            @AbstractText,
            @UploadUrl,
            @Session,
            @User,
            @FirstName,
            @LastName,
            @EventID,
            @EventName,
            @EventStartDate,
            @EventEndDate,
            @Description,
            @EventCreatedAt,
            @EventUpdatedAt
        )
    -- return the new record from the base view, which might have some calculated fields
    SELECT * FROM [dbo].[vwAbstractStagings] WHERE [ID] = (SELECT [ID] FROM @InsertedRow)
END
GO
GRANT EXECUTE ON [dbo].[spCreateAbstractStaging] TO [cdp_Developer], [cdp_Integration]
    